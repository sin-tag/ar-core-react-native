// automatically generated by the FlatBuffers compiler, do not modify

package com.google.ar.sceneform.lullmodel;

import java.nio.*;

import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
/**
 * A table to hold a submesh aabb.
 */
public final class SubmeshAabb extends Table {
  public static SubmeshAabb getRootAsSubmeshAabb(ByteBuffer _bb) { return getRootAsSubmeshAabb(_bb, new SubmeshAabb()); }
  public static SubmeshAabb getRootAsSubmeshAabb(ByteBuffer _bb, SubmeshAabb obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public SubmeshAabb __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Vec3 minPosition() { return minPosition(new Vec3()); }
  public Vec3 minPosition(Vec3 obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public Vec3 maxPosition() { return maxPosition(new Vec3()); }
  public Vec3 maxPosition(Vec3 obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startSubmeshAabb(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addMinPosition(FlatBufferBuilder builder, int minPositionOffset) { builder.addStruct(0, minPositionOffset, 0); }
  public static void addMaxPosition(FlatBufferBuilder builder, int maxPositionOffset) { builder.addStruct(1, maxPositionOffset, 0); }
  public static int endSubmeshAabb(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

